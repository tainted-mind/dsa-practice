class Solution {

    // Maintain queue to hold current elems
    // Add every new element and update currSum
    // make sure to update max my removing each elem from start till currSum >= target

    public int minSubArrayLen(int target, int[] nums) {
        int max = Integer.MAX_VALUE;
        int currSum = 0;
        Queue<Integer> queue = new LinkedList<>();

        for (int i=0; i<nums.length; i++) {
            currSum += nums[i];
            queue.add(nums[i]);

            while (currSum >= target) {
                max = Math.min(max, queue.size());
                currSum -= queue.remove();
            }
        }

        if (max == Integer.MAX_VALUE) return 0;

        return max;
    }
}